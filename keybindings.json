[
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenNavigatePrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "enter",
        "command": "runCommands",
        "when": "filesExplorerFocus",
        "args": {
            "commands": [
                "list.select",
                "workbench.action.toggleSidebarVisibility"
            ]
        }
    },
    {
        "key": "ctrl+d",
        "command": "deleteFile",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "explorer.newFile",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "workbench.action.focusActiveEditorGroup"
            ]
        }
    },
    {
        "key": "tab",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "tab",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "escape",
        "command": "-extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    //{
    //"key": "enter",
    //"command": "list.select",
    //"when": "listFocus && !inputFocus"
    //},
    {
        "key": "ctrl+r",
        "command": "renameFile",
        "when": "filesExplorerFocus"
    },
    //{
    //"key": "ctrl+e",
    //"command": "workbench.action.toggleSidebarVisibility"
    //},
    //{
    //"key": "ctrl+e",
    //"command": "workbench.files.action.showActiveFileInExplorer",
    ////"when": "!explorerViewletVisible"
    //},
    //{
    //"key": "tab",
    //"command": "jupyter.commandpalette.run",
    //"when": "notebookEditorFocused && !vim.insertMode",
    //},
    {
        "key": "ctrl+e",
        "command": "runCommands",
        "args": {
            "commands": [
                "workbench.action.toggleSidebarVisibility",
                "workbench.files.action.showActiveFileInExplorer"
            ]
        },
        "when": "!explorerViewletVisible"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "explorerViewletVisible && !filesExplorerFocus"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.focus",
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+x",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "shift+alt+enter",
        "command": "jupyter.restartkernelandrunuptoselectedcell"
    },
    {
        "key": "ctrl+a ctrl+enter",
        "command": "jupyter.runallcells"
    },
    {
        "key": "ctrl+; a",
        "command": "jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "ctrl+; a",
        "command": "-jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused"
    },
    {
        "key": "shift+o",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "o",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "notebook.execute"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.nextEditor",
        "when": "!inQuickOpen",
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.previousEditor",
        "when": "!inQuickOpen"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+x",
        "command": "workbench.action.closeActiveEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "p",
        "command": "notebook.cell.paste",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+v",
        "command": "-notebook.cell.paste",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "shift+p",
        "command": "notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "shift+cmd+v",
        "command": "-notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "y",
        "command": "notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "dd",
        "command": "runCommands",
        "args": {
            "commands": [
                "notebook.cell.cut",
            ]
        },
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.formatDocument",
    },
    {
        "key": "c",
        "command": "-notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "alt+b",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "shift+cmd+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "alt+s",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+cmd+g",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+cmd+s",
        "command": "editor.action.showDefinitionPreviewHover"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+j",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+k",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+u",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+g",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+end",
        "command": "-workbench.action.terminal.scrollToBottom",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+home",
        "command": "-workbench.action.terminal.scrollToTop",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "shift+alt+cmd+f",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+alt+cmd+9",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusNextGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusPreviousGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-extension.vim_ctrl+b",
        "when": "editorTextFocus && vim.active && vim.use<C-b> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+backspace",
        "command": "-extension.vim_ctrl+backspace",
        "when": "editorTextFocus && vim.active && vim.use<C-BS> && !inDebugRepl && vim.mode != 'Insert'"
    },
    //{
    //"key": "x",
    //"command": "deleteFile",
    //"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    //},
    {
        "key": "cmd+backspace",
        "command": "-deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "codegpt-sidebar.focus"
    },
    {
        "key": "ctrl+\\",
        "command": "codegpt.askCodeGPT",
        //"when": "!sidebarVisible || explorerViewletVisible"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.files.action.createFolderFromExplorer",
        "when": "filesExplorerFocus",
    },
    {
        "key": "ctrl+c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+v",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus",
    },
    {
        "key": "ctrl+x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus",
    },
    //{
    //"key": "ctrl+\\",
    //"command": "workbench.action.toggleSidebarVisibility",
    ////"when": "sidebarVisible && !explorerViewletVisible"
    //},
    {
        "key": "enter",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    //{
    //"key": "tab",
    //"command": "notebook.cell.quitEdit",
    //"when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    //},
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
    },
    {
        "key": "tab",
        "command": "notebook.cell.quitEdit",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "tab",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
    },
    {
        "key": "escape",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+alt+x",
        "command": "notebook.clearAllCellsOutputs"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+r",
        "command": "jupyter.restartkernel",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "d d",
        "command": "notebook.cell.cut",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "x",
        "command": "-notebook.cell.cut",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "cmd+backspace",
        "command": "notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "d d",
        "command": "-notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+c",
        "command": "notebook.cell.cancelExecution",
        "when": "!filesExplorerFocus"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "escape",
        "command": "-editor.action.inlineSuggest.hide",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "g g",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "g g",
        "command": "-list.focusFirst",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+g",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+g",
        "command": "-list.focusLast",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "/",
        "command": "list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "f3",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "tab",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
    },
    {
        "key": "escape",
        "command": "-search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
    },
    {
        "key": "tab",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    },
    {
        "key": "escape",
        "command": "-list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
    },
    {
        "key": "tab",
        "command": "list.closeFind",
        "when": "listFocus && treeFindOpen"
    },
    {
        "key": "escape",
        "command": "-list.closeFind",
        "when": "listFocus && treeFindOpen"
    },
    {
        "key": "h",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusParent",
                "list.collapse",
            ]
        },
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "list.focusParent",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+alt+x",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "shift+cmd+up",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus"
    },
]